swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/currentMonth:
    get:
      tags:
        - Transactions Module
      summary: Finds Transactions
      description: API for receiving transactions for the last month by account
      produces:
        - application/json
      operationId: transactions
      parameters:
        - name: currentMonth
          in: query
          description: User's ID is required to be fetched
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid Month value
        "401":
          description: Unauthorized Error
        "500":
          description: Internal Server Error
      security:
        - Bearer: []
  /transactions/{transactionID}:
    get:
      tags:
        - Transactions Module
      summary: Finds transaction's detailed
      description: API for receiving all transactions
      operationId: transaction
      parameters:
        - name: transactionID
          in: path
          description: Transaction's ID is required to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/TransactionDetailedResponse"
        "400":
          description: Invalid Transaction's ID value
        "401":
          description: Unauthorized Error
        "500":
          description: Internal Server Error
      security:
        - Bearer: []
    patch:
      tags:
        - Transactions Module
      summary: Change category or add note
      description: API for receiving all transactions
      operationId: categoryAndNote
      parameters:
        - name: transactionID
          in: path
          description: Transaction's ID is required to be fetched
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Category and note update payload
          required: true
          schema:
            $ref: "#/definitions/UpdateTransaction"
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/TransactionDetailedResponse"
        "400":
          description: Invalid value
        "401":
          description: Unauthorized Error
        "500":
          description: Internal Server Error
      security:
        - Bearer: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  TransactionDetailedResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
      category:
        type: string
        default: food
        enum:
          - food
          - car
          - bill
          - other
      note:
        type: string
  TransactionsResponse:
    type: object
    properties:
      accountID:
        type: integer
      transactions:
        type: object
        properties:
          id:
            type: integer
            format: int64
          description:
            type: string
          amount:
            type: integer
            format: int64
          balance:
            type: integer
            format: int64
          date:
            type: string
            format: date-time
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UpdateTransaction:
    type: object
    properties:
      category:
        type: string
        default: food
        enum:
          - food
          - car
          - bill
          - other
      note:
        type: string
